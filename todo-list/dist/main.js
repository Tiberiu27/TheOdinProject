(()=>{"use strict";class e{constructor(e,t,n,d){this.title=e,this.description=t,this.dueDate=n,this.priority=d}}class t{constructor(e,t){this.name=e,this.tasks=t}}const n=(()=>{let n=window.localStorage,d=[];return d=function(e){let t;try{t=window.localStorage;let e="___storage test___";return t.setItem(e,e),t.removeItem(e),!0}catch(e){return e instanceof DOMException&&(22===e.code||1014===e.code||"QuotaExceededError"===e.name||"NS_ERROR_DOM_QUOTA_REACHED"===e.name)&&t&&0!==t.length}}()&&n.getItem("projects")?JSON.parse(n.getItem("projects")):[],{projects:d,addProject:e=>{const o=new t(e,[]);d.push(o),n.setItem("projects",JSON.stringify(d))},addTask:(t,o,i,s,c)=>{const a=new e(o,i,s,c),r=d.findIndex((e=>e.name===t));d[r].tasks.push(a),n.setItem("projects",JSON.stringify(d))},removeTask:(e,t)=>{const o=d.indexOf(e),i=d[o].tasks.indexOf(t);i&&(d[o].tasks.splice(i,1),n.setItem("projects",JSON.stringify(d)))},removeProject:e=>{const t=d.indexOf(e);d.splice(t,1),n.setItem("projects",JSON.stringify(d))},changePriority:(e,t)=>{const o=d.indexOf(e),i=d[o].tasks.indexOf(t);switch(t.priority){case"low":return void(d[o].tasks[i].priority="medium");case"medium":return void(d[o].tasks[i].priority="high");case"high":return void(d[o].tasks[i].priority="low")}n.setItem("projects",JSON.stringify(d))}}})(),d=n.projects,o=(()=>{let e=document.getElementById("addProjectModal"),t=document.getElementById("addProject"),o=document.getElementById("closeProject"),i=document.getElementById("addTaskModal"),s=document.getElementById("addTask"),c=document.getElementById("closeTask");t.onclick=()=>{let t=document.getElementById("projectName").value;n.addProject(t),m(d),e.style.display="none"},o.onclick=()=>{document.getElementById("projectName").value="",e.style.display="none"},s.onclick=()=>{let e=document.getElementById("projectParent").value,t=document.getElementById("taskTitle").value,o=document.getElementById("taskDescription").value,s=document.getElementById("taskDueDate").value,c=d.indexOf(e);d.hasOwnProperty(e)||(n.addProject(e),m(d));let a=d[c];n.addTask(e,t,o,s,"medium"),u(a),i.style.display="none"},c.onclick=()=>{i.style.display="none"};const a=()=>{if(document.contains(document.getElementById("taskDetailContent")))return;const e=document.getElementById("mainContainer"),t=document.createElement("div"),n=document.createElement("div");n.setAttribute("id","taskDetailContent"),t.setAttribute("id","taskDetail"),t.appendChild(n),e.appendChild(t)},r=()=>{if(document.contains(document.getElementById("tasksListContent")))return;const e=document.getElementById("mainContainer"),t=document.createElement("div"),n=document.createElement("div");n.setAttribute("id","tasksListContent"),t.setAttribute("id","tasksList"),t.textContent="Tasks",t.appendChild(n),e.appendChild(t)},l=()=>{if(document.contains(document.getElementById("projectListContent")))return;const e=document.getElementById("mainContainer"),t=document.createElement("div"),n=document.createElement("div");t.setAttribute("id","projectList"),n.setAttribute("id","projectListContent"),t.textContent="Projects",t.appendChild(n),e.appendChild(t)},m=t=>{const n=document.getElementById("projectListContent"),d=document.createElement("span");d.setAttribute("id","addProjectButton"),d.textContent="Add Project",d.addEventListener("click",(()=>{e.style.display="block"})),n.innerHTML="",t.forEach((e=>{const d=document.createElement("div");d.setAttribute("class","projects"),d.textContent=e.name,d.addEventListener("click",(e=>{const n=e.target.textContent,d=t.findIndex((e=>e.name===n)),o=t[d];u(o),document.getElementById("taskDetailContent")&&(document.getElementById("taskDetailContent").innerHTML="")})),n.appendChild(d)})),n.appendChild(d),l()},u=e=>{const t=document.getElementById("tasksListContent"),o=document.createElement("span"),s=document.createElement("span");o.textContent="Add Task",o.addEventListener("click",(()=>{i.style.display="block"})),s.textContent="Delete Project",s.setAttribute("id","deleteProjectButton"),s.addEventListener("click",(()=>{n.removeProject(e),m(d),t.innerHTML="",document.getElementById("taskDetailContent")&&(document.getElementById("taskDetailContent").innerHTML="")})),t.innerHTML="",t.appendChild(o),t.appendChild(s),e.tasks.forEach((n=>{const d=document.createElement("div"),o=document.createElement("p"),i=document.createElement("p");o.textContent=n.title,i.textContent=`due ${n.dueDate}`,d.setAttribute("class","tasks"),d.append(o,i),d.addEventListener("click",(()=>{p(e,n)})),t.appendChild(d)})),r()},p=(e,t)=>{const d=document.getElementById("taskDetailContent"),o=document.createElement("h3"),i=document.createElement("div"),s=document.createElement("p"),c=document.createElement("h3"),r=document.createElement("div"),l=document.createElement("div"),m=document.createElement("h4");m.addEventListener("click",(()=>{n.removeTask(e,t),u(e),p()})),c.addEventListener("click",(()=>{n.changePriority(e,t),p(e,t)})),r.setAttribute("id","firstLine"),l.setAttribute("id","lastLine"),o.classList.add("titles"),i.classList.add("descriptions"),i.setAttribute("contenteditable","true"),s.classList.add("dueDates"),c.classList.add("priorities"),d.innerHTML="",o.textContent=t.title,i.textContent=t.description,s.textContent=`Due: ${t.dueDate}`,c.textContent=`Priority: ${t.priority}`,m.textContent="Delete task",l.append(s,m),r.append(o,c),d.append(r,i,l),a()};return{loadHeader:()=>{const e=document.createElement("header");e.textContent="TODO List",document.body.append(e)},loadMainContainer:()=>{const e=document.createElement("div");e.setAttribute("id","mainContainer"),document.body.appendChild(e),l(),r(),a()},loadProjects:m}})();o.loadHeader(),o.loadMainContainer(),o.loadProjects(n.projects)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,