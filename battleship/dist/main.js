(()=>{var e={475:(e,t,n)=>{const{Game:r}=n(403),o=(()=>{const e=()=>{const e=document.getElementsByTagName("nav")[0];e.innerHTML="";const t=document.createElement("h1");t.textContent=(r.player.hasTurn?"Your":"Enemy")+" turn",e.appendChild(t)},t=(t,o,a)=>{const s=document.createElement("div");s.setAttribute("id",o);const i=document.createElement("h1");i.textContent=a;const c=document.createElement("div");c.setAttribute("id","left-container"===o?"left-board":"right-board"),t.spaces.forEach((o=>{let a=document.createElement("div");a.setAttribute("id",`${o.coord}`),a.classList.add("spaces"),a.addEventListener("click",(o=>{t.recieveAttack(o.target.id),a.style.background="red",r.switchTurns(),e(),(r.playerBoard.fleetDrown||r.compBoard.fleetDrown)&&n()})),o.hasShip&&t===r.playerBoard&&(a.style.background="blue"),c.appendChild(a)})),s.appendChild(i),s.appendChild(c),document.getElementById("main-container").appendChild(s)},n=()=>{const e=document.getElementById("main-container");e.innerHTML="",e.style.justifyContent="center",e.style.alignItems="center";const t=document.createElement("h2");t.style.fontSize="50px",t.textContent=`Game Over! ${r.compBoard.fleetDrown?"You":"Your enemy has "} won!`,e.appendChild(t)};return{loadNav:e,loadMainContainer:()=>{document.getElementById("main-container"),t(r.playerBoard,"left-container","Your board"),t(r.compBoard,"right-container","Enemy's board")}}})();e.exports={DOMloader:o}},403:(e,t,n)=>{const{Player:r}=n(62),{Gameboard:o}=n(325),a=(()=>{const e=o(),t=o();s(e,3),s(e,5),s(e,7),s(t,3),s(t,5),s(t,7);const n=r(t),a=r(e);function s(e,t){let n=Math.floor(10*Math.random())+1,r=`${Math.floor(10*Math.random())+1}:${n}`;n+t>10&&s(e,t);try{e.placeShip(r,t)}catch(n){s(e,t)}}return a.isComputer=!0,n.hasTurn=!0,{player:n,comp:a,playerBoard:e,compBoard:t,switchTurns:()=>{n.hasTurn?(n.hasTurn=!1,a.hasTurn=!0,setTimeout((()=>{a.attack()}),1e3)):n.hasTurn||(a.hasTurn=!1,n.hasTurn=!0)}}})();e.exports={Game:a}},325:(e,t,n)=>{const{Ship:r}=n(884);e.exports={Gameboard:()=>{let e=[],t=[],n=[];(()=>{for(let t=1;t<11;t++)for(let n=1;n<11;n++){let r={coord:`${t}:${n}`,hasShip:!1,occupiedBy:"",isHit:!1};e.push(r)}})();let o={spaces:e,missHits:n,deployedShips:t,fleetDrown:!1,placeShip:(n,o)=>{const a=r(o);if(t.find((e=>e.len===o)))return;const s=Number(n[n.length-1]),i=n[0];if(!(s+a.len-1>10)){for(let t=0;t<a.len;t++){const n=e.find((e=>e.coord===`${i}:${s+t}`));if(n.hasShip)throw"try again";n.hasShip=!0,n.occupiedBy=a.size}t.push(a)}},recieveAttack:r=>{let a=e.find((e=>e.coord===r));if(!a.isHit){if(a.isHit=!0,a.hasShip){let e=a.occupiedBy;(e=>{if(e.isSunk)return;let t=Math.max(e.hitSpots)+1;e.hit(t)})(t.find((t=>t.size===e)))}else n.push(r);3===t.filter((e=>e.isSunk)).length&&(o.fleetDrown=!0)}}};return o}}},62:e=>{e.exports={Player:e=>{let t=[];const n=()=>{let o=Math.floor(10*Math.random())+1,a=Math.floor(10*Math.random())+1,s=`${a}:${o}`;!e.spaces.map((e=>e.coord)).includes(s)||t.includes(s)?n():(document.getElementById(`${a}:${o}`).click(),r.hits.push(s))};let r={isComputer:!1,hasTurn:!1,hits:t,attack:n};return r}}},884:e=>{e.exports={Ship:e=>{let t;switch(e){case 3:t="small";break;case 5:t="medium";break;case 7:t="large"}const n={len:e,isSunk:!1,size:t,hitSpots:[],hit:e=>{n.isSunk||(n.hitSpots.push(e),n.hitSpots.length===n.len&&(n.isSunk=!0))}};return n}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={exports:{}};return e[r](a,a.exports,n),a.exports}(()=>{const{DOMloader:e}=n(475);e.loadNav(),e.loadMainContainer()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,